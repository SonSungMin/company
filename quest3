private void SetRowSelect(object row, string select = "Y")
{
// ISSUE: reference to a compiler-generated field
if (AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitee == null)
{
// ISSUE: reference to a compiler-generated field
AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitee = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof(AmiTreeListView), (IEnumerable<CSharpArgumentInfo>)new CSharpArgumentInfo[1]
{
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
}));
}
// ISSUE: reference to a compiler-generated field
Func<CallSite, object, bool> target = AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitee.Target;
// ISSUE: reference to a compiler-generated field
CallSite<Func<CallSite, object, bool>> pSitee = AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitee;
// ISSUE: reference to a compiler-generated field
if (AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitef == null)
{
// ISSUE: reference to a compiler-generated field
AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitef = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.NotEqual, typeof(AmiTreeListView), (IEnumerable<CSharpArgumentInfo>)new CSharpArgumentInfo[2]
{
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.Constant, (string) null)
}));
}
// ISSUE: reference to a compiler-generated field
// ISSUE: reference to a compiler-generated field
object obj1 = AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitef.Target((CallSite)AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Sitef, row, (object)null);
// ISSUE: reference to a compiler-generated field
if (AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site10 == null)
{
// ISSUE: reference to a compiler-generated field
AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site10 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof(AmiTreeListView), (IEnumerable<CSharpArgumentInfo>)new CSharpArgumentInfo[1]
{
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
}));
}
object obj2;
// ISSUE: reference to a compiler-generated field
// ISSUE: reference to a compiler-generated field
if (!AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site10.Target((CallSite)AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site10, obj1))
{
// ISSUE: reference to a compiler-generated field
if (AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site11 == null)
{
// ISSUE: reference to a compiler-generated field
AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site11 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof(AmiTreeListView), (IEnumerable<CSharpArgumentInfo>)new CSharpArgumentInfo[2]
{
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
}));
}
// ISSUE: reference to a compiler-generated field
// ISSUE: reference to a compiler-generated field
obj2 = AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site11.Target((CallSite)AmiTreeListView.\u003CSetRowSelect\u003Eo__SiteContainerd.\u003C\u003Ep__Site11, obj1, row is DataRowView);
}
else
obj2 = obj1;
if (!target((CallSite)pSitee, obj2))
return;
DataRow row1 = (row as DataRowView).Row;
if (row1 != null)
row1["IS_SELECT"] = (object)select;
}
